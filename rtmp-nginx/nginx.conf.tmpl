user  root;

events {
    worker_connections 1024;
}

rtmp {

    server {

        listen 1935;
        chunk_size 4000;

        application {{getv "/stream"}} {
            live on;
            allow publish all;
            allow play all;
            {{if exists "/connect/url"}}
                on_connect {{getv "/connect/url"}};
            {{end}}
            {{if exists "/play/url"}}
                on_play {{getv "/play/url"}};
            {{end}}
            {{if exists "/publish/url"}}
                on_publish {{getv "/publish/url"}};
            {{end}}
            {{if exists "/done/url"}}
                on_publish {{getv "/done/url"}};
            {{end}}
            {{if exists "/playdone/url"}}
                on_play_done {{getv "/playdone/url"}};
            {{end}}
            {{if exists "/publishdone/url"}}
                on_publish_done {{getv "/publishdone/url"}};
            {{end}}
            {{if exists "/update/url"}}
                on_update {{getv "/update/url"}};
                notify_update_strict off;
            {{end}}
            {{if exists "/update/timeout"}}
                notify_update_timeout {{getv "/update/timeout"}};
            {{end}}

            {{if exists "/hls"}}
                hls on;
                hls_path /vout/hls;
            {{end}}
            {{if exists "/dash"}}
                dash on;
                dash_path /vout/dash;
            {{end}}

            {{if exists "exec/play"}}
                exec_play {{getv "/exec/play"}};
            {{end}}

            {{if exists "exec/publish"}}
                exec_publish {{getv "/exec/publish"}};
            {{end}}

            {{if exists "exec/playdone"}}
                exec_play_done {{getv "/exec/playdone"}};
            {{end}}

            {{if exists "exec/publishdone"}}
                exec_publish_done {{getv "/exec/publishdone"}};
            {{end}}
            notify_method get;
        }
    }
}

http {
    server {

        listen 80;
        {{if exists "/hls"}}
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /vout;
            add_header Cache-Control no-cache;
            add_header Allow-Control-Allow-Origin *;
        }
        {{end}}

        {{if exists "/dash"}}
        location /dash {
            types {
                application/dash+xml mpd;
                video/mp4 m4v;
                audio/mp4 m4a;
            }
            root /vout;
            add_header Cache-Control no-cache;
            add_header Allow-Control-Allow-Origin *;
        }
        {{end}}
    }
}
